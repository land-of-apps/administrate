extends ../layout

block objective
  div.
    Installation of the AppMap client for Ruby is a key step in the user adoption flow.
    Let's create an example program which installs the #[code appmap] Ruby gem and runs it to record a
    scenario of a sample app.

block approach
  :markdown-it
    The [examples](https://github.com/applandinc/appmap-ruby/blob/master/examples/) folder in this project contains a sample project called `mock_webapp`, which 
    performs the following:

    * Requests a `User` object by id ("alice").
    * The request is handled by a `Controller`.
    * The `Controller` looks up the id in a `User` model.
    * The `User` model looks up the id and returns a `User` object, or raises an error.
    * The `Controller` renders the response as a Hash and returns it to the client.

    A test program called `install.rb` installs the `appmap` Ruby gem and then records the `mock_webapp`.
    To create an appmap of `install.rb`:

    ```
    bundle exec exe/record examples/install.rb
    ```

    To upload the AppMap to AppLand:

    ```
    bundle exec exe/upload appmap.json
    ```

block results
  :markdown-it
    ## AppMap of `install.rb`

    [![AppMap of `install.rb`](install_example_appmap.png)](https://appland-staging.herokuapp.com/scenarios/ba2fc385-a96d-42bf-9ef8-cdbdab8a475d)

  button(onclick="document.querySelector('#show-test-program').style.display = 'block';") Show test program code
  div#show-test-program(style='display: none;')
    pre
      include ../../../examples/install.rb

block next_steps
  :markdown-it

    A related feature is the AppLand server receiving the scenario file and displaying it.

    Here is an [AppMap of the server receiving a scenario file](https://appland-staging.herokuapp.com/scenarios/beb49bc7-b2ca-49b6-bac3-5d2eec2df062).
    
  